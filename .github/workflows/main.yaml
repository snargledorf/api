name: Check and deploy

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

env:
  # general
  GITHUB_SHA: ${{ github.sha }}
  GITHUB_ORG: ${{ github.event.organization.login }}
  GITHUB_REPO: ${{ github.event.repository.name }}
  GITHUB_BRANCH: ${{ github.ref_name }}

  # docker
  CONTAINER_REGISTRY: ghcr.io
  CONTAINER_IMAGE: ${{ github.event.repository.name }}

  # deployment
  K8S_CLUSTER: k8s-bandsy
  HELM_RELEASE_NAMESPACE: winget-run-dev
  HELM_RELEASE: ${{ github.event.repository.name }}
  HELM_CHART_DIR: ./chart

jobs:
  check:
    name: General code checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: lts/*
      - name: Setup pnpm
        uses: pnpm/action-setup@v2.0.1
        with:
          version: 6
      - name: Install dependencies
        run: pnpm install
      - name: Ensure correct formatting
        run: pnpm format:check
      - name: Ensure correct linting
        run: pnpm lint:check
      - name: Ensure tests pass requirements
        run: pnpm test:check
      - name: Ensure code builds
        run: pnpm build:check
  build:
    name: Build container image
    if: github.event_name == 'push'
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build and push image to registry
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: ${{ env.CONTAINER_IMAGE }}
          tags: ${{ env.GITHUB_SHA }},${{ env.GITHUB_BRANCH }},latest
          githubOrg: ${{ env.GITHUB_ORG }}
          registry: ${{ env.CONTAINER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
  deploy:
    name: Deploy to kubernetes
    if: github.event_name == 'push'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
      - name: Save kubeconfig
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ env.K8S_CLUSTER }}
      - name: Install helm
        run: |-
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh
      - name: Update deployment
        run: helm upgrade ${{ env.HELM_RELEASE }} ${{ env.HELM_CHART_DIR }} --install --atomic --namespace ${{ env.HELM_RELEASE_NAMESPACE }} --set-string sha=${{ env.GITHUB_SHA }}
